.text-white{color: $white;}
.text-grey{color: $light-grey;}
.text-black{color: $black;}
.text-gold{color: $gold;}
.text-dark-gold{color: $dark-gold;}

.text-decoration{
    position: relative;
    display: inline-block;
    &__content{
        position: relative;
        z-index: 2;
    }
    &__elem{
        position: absolute;

        border: 1px solid $white;
        border-radius: 50%;

        &:nth-of-type(1){
            width: 160px;
            height: 160px;

            top: calc(50% - 80px + .5rem);
            left: calc(50% - 80px);
            opacity: .4;
            animation: opacity-1 1s ease infinite alternate;
        }
        &:nth-of-type(2){
            width: 280px;
            height: 280px;

            top: calc(50% - 140px + .5rem);
            left: calc(50% - 140px);
            opacity: .3;
            animation: opacity-2 1s ease infinite alternate;
            animation-delay: .3s;
        }
        &:nth-of-type(3){
            width: 400px;
            height: 400px;

            top: calc(50% - 200px + .5rem);
            left: calc(50% - 200px);
            opacity: .2;
            animation: opacity-3 1s ease infinite alternate;
            animation-delay: .6s;
        }
        &:nth-of-type(4){
            width: 520px;
            height: 520px;

            top: calc(50% - 260px + .5rem);
            left: calc(50% - 260px);
            opacity: .1;
            animation: opacity-4 1s ease infinite alternate;
            animation-delay: .9s;
        }
    }

    &_light{
        .text-decoration__elem{
            border-color: $dark-gold;
        }
    }
}
@mixin animation-mixin($name, $from, $to) {
    @keyframes #{$name} {
      0% {opacity: $from;}
      100% {opacity: $to;}
    }
}

@include animation-mixin(opacity-1, 0.4, 0);
@include animation-mixin(opacity-2, 0.3, 0);
@include animation-mixin(opacity-3, 0.2, 0);
@include animation-mixin(opacity-4, 0.1, 0);

.text-uppercase{text-transform: uppercase;}
.text-bold,strong,b{font-weight: $font-weight-bold;}
.text-light{font-weight: 300;}

.text-small,small,.small{font-size: 0.9rem;}
.text-lead,small,.lead{font-size: 1.2rem;}

.text{
    &-right{text-align: right;}
    &-center{text-align: center;}
    &-left{text-align: left;}
}

.subtitle{
    position: relative;
    padding-bottom: $spacer/2;
    margin-bottom: map-get($map: $spacers, $key: 2);

    &:before{
        content:'';
        display: block;
        position: absolute;
        left: 0;
        bottom: 0;
        width: 60px;
        height: 2px;
        background: linear-gradient( 0deg, rgb(115,87,49) 0%, rgb(230,225,157) 100%);
    }

    &_link{
        color: $white;
        &:hover, &:focus{
            color: $gold;
        }
    }
}
.lines{
    width: 60px;
    height: 2px;
    background: linear-gradient( 0deg, rgb(115,87,49) 0%, rgb(230,225,157) 100%);
}

@function spacing($unit, $return: 'px', $base: 16) {
    @if $return == 'em' {
      @return ($unit) / 1000;
    } @else {
      @return ($unit * $base) / 1000;
    }
}
.text{
    &-spacing-50{
        letter-spacing: spacing(50) + px;
    }
    &-spacing-100{
        letter-spacing: spacing(100) + px;
    }
}

@media all and (max-width: map-get($grid-breakpoints, 'xl')){
    .text-xl{
        &-left{text-align: left;}
        &-center{text-align: center;}
        &-right{text-align: right;}
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'lg')){
    .text-lg{
        &-left{text-align: left;}
        &-center{text-align: center;}
        &-right{text-align: right;}
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'md')){
    .text-md{
        &-left{text-align: left;}
        &-center{text-align: center;}
        &-right{text-align: right;}
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'sm')){
    .text-sm{
        &-left{text-align: left;}
        &-center{text-align: center;}
        &-right{text-align: right;}
    }
}