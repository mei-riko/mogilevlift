html,body {
    font-size: map-get($font-size, 'lg');
    line-height: $line-height-base;
    box-sizing: border-box;
    -ms-overflow-style: scrollbar;

    background: $body-color;
}
*,
*::before,
*::after {
    box-sizing: inherit;
}

.bg-lines{
    background: $body-color url("../img/lines.svg");
    background-repeat-y: repeat;
    background-size: contain;
    background-position: top center;
}
.bg-white{
    background-color: $white;
}
.bg-light{
    background-color: $grey;
}
.bg-secondary{
    background-color: $border-color;
}
.bg-separate{
    background: linear-gradient(to bottom, $body-color 60%, $white 40%);
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6,
.heading,.heading-secondary{
    font-family: $font-family-base;
    font-weight: $font-weight-heading;
    line-height: $line-height-heading;
    margin-bottom: map-get($spacers, 1);

    &:last-child{
        margin-bottom: 0;
    }
}
* + h1, * + h2, * + h3, * + h4, * + h5, * + h6,
* + .h1, * + .h2, * + .h3, * + .h4, * + .h5, * + .h6{
    margin-top: map-get($spacers, 2);
}
.h1,h1              {font-size: 2.25rem;}
.h2,h2              {font-size: 2rem;}
.h3,h3              {font-size: 1.75rem;}
.h4,h4              {font-size: 1.5rem;}
.h5,h5              {font-size: 1.25rem;}
.h6,h6              {font-size: 1rem;}

.heading            {font-size: 72px;}
.heading-secondary  {font-size: 60px;}

table{
    font-size: 1rem;
}
p {
    font-size: 1rem;
    margin-top: 0;
    margin-bottom: $spacer/2;

    &:last-child{
        margin-bottom: 0;
    }
}
ol, ul{
    padding: 0;
    margin-bottom: map-get($spacers, 1);
}
a{
    display: inline-block;
    outline: none;
    transition: .3s;

    color: $link-color;

    &:hover, &:focus{
        color: $link-hover-color;
        outline: none;
    }
}
.link{
    color: $link-color;
    &:hover, &:focus{
        color: $link-hover-color;
    }

    &-inverse{
        color: $link-hover-color;
        &:hover{
            color: $link-color;
        }
    }
    &-underline{
        text-decoration: underline;
    }
}
.blockquote, blockquote{
    padding: $spacer/2 0 $spacer/2 $spacer;
    border-left: 4px solid $white;
}
.blockquote-gold{
    padding-left: map-get($map: $spacers, $key: 4);
    background: url("../img/blockquote.svg") no-repeat left top / 40px;
}
.blockquote-person{
    padding-left: 0;
    padding-right: 0;
    
    .blockquote-gold{
        background-position-x: map-get($map: $spacers, $key: 2);
        background-position-y: map-get($map: $spacers, $key: 4);
        padding: map-get($map: $spacers, $key: 4);
        padding-left: 120px;
    }
}

.border-top{border-top: 1px solid $border-color;}
.border-bottom{border-bottom: 1px solid $border-color;}
.border{border: 1px solid $border-color;}
.border-gradient{
    position: relative;
    &:before{
        content: '';
        display: block;
        background-color: $body-color;
        width: calc(100% - 2px);
        height: calc(100% - 2px);

        position: absolute;
        top: 1px;
        left: 1px;
        z-index: 2;
    }
    &:after{
        content: '';
        display: block;
        background: linear-gradient( 90deg, rgb(115,87,49) 0%, rgb(230,225,157) 100%);
        width: 100%;
        height: 100%;

        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
    }
}

.p-relative{position: relative;}
.p-sticky{position: sticky; top: 110px; left: 0; z-index: 101;}
.p-absolute{position: absolute; top: 0; left: 0; z-index: 101;}

.d{
    &-flex{display: flex;}
    &-none{display: none;}
    &-block{display: block;}
}

@media all and (max-width: map-get($grid-breakpoints, 'xl')){
    html,body {
        font-size: map-get($font-size, 'md');
    }
    .heading            {font-size: 56px;}
    .heading-secondary  {font-size: 46px;}

    .d-xl{
        &-flex{display: flex;}
        &-none{display: none;}
        &-block{display: block;}
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'lg')){
    .heading            {font-size: 42px;}
    .heading-secondary  {font-size: 30px;}

    .p-sticky{top: 95px;}

    .d-lg{
        &-flex{display: flex;}
        &-none{display: none;}
        &-block{display: block;}
    }
    .blockquote-person{      
        .blockquote-gold{
            background-position-x: 16px;
            background-position-y: map-get($map: $spacers, $key: 2);
            background-size: 24px;
            padding: map-get($map: $spacers, $key: 2) map-get($map: $spacers, $key: 3);
        }
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'md')){
    h1, h2, h3, h4, h5, h6,
    .h1, .h2, .h3, .h4, .h5, .h6,
    .heading,.heading-secondary{
        margin-bottom: $spacer/2;

        &:last-child{
            margin-bottom: 0;
        }
    }
    * + h1, * + h2, * + h3, * + h4, * + h5, * + h6,
    * + .h1, * + .h2, * + .h3, * + .h4, * + .h5, * + .h6{
        margin-top: map-get($spacers, 1);
    }
    
    .p-sticky{top: 70px;z-index: 98;}
    
    .d-md{
        &-flex{display: flex;}
        &-none{display: none;}
        &-block{display: block;}
    }
    .blockquote-person{      
        .blockquote-gold{
            background-position-x: 10px;
            background-position-y: 16px;
            background-size: 20px;
            padding: map-get($map: $spacers, $key: 2);
        }
    }
}
@media all and (max-width: map-get($grid-breakpoints, 'sm')){
    html,body {
        font-size: map-get($font-size, 'sm');
    }

    .h1,h1              {font-size: 1.75rem;}
    .h2,h2              {font-size: 1.5rem;}
    .h3,h3              {font-size: 1.25rem;}
    .h4,h4              {font-size: 1.25rem;}
    .h5,h5              {font-size: 1rem;}
    .h6,h6              {font-size: 1rem;}

    .heading            {font-size: 28px;}
    .heading-secondary  {font-size: 20px;}
    .d-sm{
        &-flex{display: flex;}
        &-none{display: none;}
        &-block{display: block;}
    }

    .blockquote-person{      
        .blockquote-gold{
            background-position-x: 10px;
            background-position-y: 26px;
            background-size: 12px;
            padding: map-get($map: $spacers, $key: 1);
        }
    }
}

@media all and (max-width: map-get($grid-breakpoints, 'xs')){
    .d-xs{
        &-flex{display: flex;}
        &-none{display: none;}
        &-block{display: block;}
    }
}